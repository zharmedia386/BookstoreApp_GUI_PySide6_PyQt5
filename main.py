# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import platform

from PySide6.QtCore import *
from PySide6.QtGui import *
from PySide6.QtWidgets import *

import pymysql
from formInput import Ui_MainWindow1
from mainWindow import Ui_MainWindow

# SPLASH SCREEN - OPENING
from modules.ui_splash_screen import Ui_SplashScreen

# SET AS GLOBAL WIDGETS
# ///////////////////////////////////////////////////////////////
widgets = None
## ==> GLOBALS
counter = 0

class MainWindow(QMainWindow):
    def __init__(self):
        QMainWindow.__init__(self)

        # SET AS GLOBAL WIDGETS
        # ///////////////////////////////////////////////////////////////
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)
        global widgets
        widgets = self.ui

        self.show()
        widgets.pushButton.clicked.connect(self.login)
    def messagebox(self,title,message):
        pesan = QMessageBox()
        pesan.setWindowTitle(title)
        pesan.setText(message)
        pesan.setStandardButtons(QMessageBox.Ok)
        pesan.exec_()
    def warning(self,title,message):
        pesan = QMessageBox()
        pesan.setWindowTitle(title)
        pesan.setText(message)
        pesan.setStandardButtons(QMessageBox.Ok)
        pesan.exec_()
    def login(self):
        username = widgets.lineEdit.text()
        password = widgets.lineEdit_2.text()
        connect=pymysql.connect(host="localhost",user="root",password="",db="db_perpustakaan2",port=3306,autocommit=True)
        cur = connect.cursor()
        query = "select * from admin where username=%s and password=%s"
        cur.execute(query,(username,password))
        if(len(cur.fetchall())>0):
           self.Dialog = QMainWindow()
           self.ui = Ui_MainWindow1()
           self.ui.setupUi(self.Dialog)
           self.Dialog.show()
           MainWindow.close(self)
        else:
           self.warning("Gagal","Masukkan Username dan Password yang benar")
# SPLASH SCREEN
class SplashScreen(QMainWindow):
    def __init__(self):
        QMainWindow.__init__(self)
        self.ui = Ui_SplashScreen()
        self.ui.setupUi(self)

        ## UI ==> INTERFACE CODES
        ########################################################################

        ## REMOVE TITLE BAR
        self.setWindowFlag(Qt.FramelessWindowHint)
        self.setAttribute(Qt.WA_TranslucentBackground)


        ## DROP SHADOW EFFECT
        self.shadow = QGraphicsDropShadowEffect(self)
        self.shadow.setBlurRadius(20)
        self.shadow.setXOffset(0)
        self.shadow.setYOffset(0)
        self.shadow.setColor(QColor(0, 0, 0, 60))
        self.ui.dropShadowFrame.setGraphicsEffect(self.shadow)

        ## QTIMER ==> START
        self.timer = QTimer()
        self.timer.timeout.connect(self.progress)
        # TIMER IN MILLISECONDS
        self.timer.start(35)

        # CHANGE DESCRIPTION

        # Initial Text
        self.ui.label_description.setText("<strong>WELCOME</strong> TO MY APPLICATION")

        # Change Texts
        QTimer.singleShot(1500, lambda: self.ui.label_description.setText("<strong>LOADING</strong> DATABASE"))
        QTimer.singleShot(3000, lambda: self.ui.label_description.setText("<strong>LOADING</strong> USER INTERFACE"))


        ## SHOW ==> MAIN WINDOW
        ########################################################################
        self.show()
        ## ==> END ##

    ## ==> APP FUNCTIONS
    ########################################################################
    def progress(self):

        global counter

        # SET VALUE TO PROGRESS BAR
        self.ui.progressBar.setValue(counter)

        # CLOSE SPLASH SCREE AND OPEN APP
        if counter > 100:
            # STOP TIMER
            self.timer.stop()

            # SHOW MAIN WINDOW
            self.main = MainWindow()
            self.main.show()

            # CLOSE SPLASH SCREEN
            self.close()

        # INCREASE COUNTER
        counter += 1

if __name__ == "__main__":
    app = QApplication(sys.argv)
    app.setWindowIcon(QIcon("icon.ico"))
    window = SplashScreen()
    sys.exit(app.exec_())
